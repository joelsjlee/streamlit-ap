{"version":3,"sources":["../node_modules/@babel/runtime/regenerator/index.js","../node_modules/underscore/modules/_setup.js","../node_modules/react/index.js","../../src/event.mjs","../../src/event-target.mjs","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/AwaitValue.js","../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../node_modules/flatbuffers/js/flatbuffers.mjs","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../util/utf8.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../io/interfaces.ts","../util/compat.ts","../util/buffer.ts","../io/adapters.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../vector.ts","../fb/Schema.ts","../fb/Message.ts","../enum.ts","../util/bit.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../visitor.ts","../visitor/typecomparator.ts","../type.ts","../data.ts","../util/pretty.ts","../builder/valid.ts","../builder/buffer.ts","../builder.ts","../builder/bool.ts","../builder/null.ts","../builder/date.ts","../builder/decimal.ts","../builder/dictionary.ts","../builder/fixedsizebinary.ts","../util/math.ts","../builder/float.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../util/bn.ts","../builder/int.ts","../builder/time.ts","../builder/timestamp.ts","../builder/interval.ts","../builder/binary.ts","../builder/utf8.ts","../builder/run.ts","../vector/row.ts","../util/vector.ts","../vector/chunked.ts","../column.ts","../util/args.ts","../schema.ts","../builder/list.ts","../builder/fixedsizelist.ts","../builder/map.ts","../builder/struct.ts","../builder/union.ts","../visitor/set.ts","../fb/File.ts","../visitor/builderctor.ts","../builder/index.ts","../ipc/metadata/file.ts","../io/stream.ts","../io/file.ts","../util/int.ts","../visitor/vectorloader.ts","../visitor/typeassembler.ts","../ipc/metadata/json.ts","../ipc/metadata/message.ts","../ipc/message.ts","../visitor/vectorassembler.ts","../ipc/writer.ts","../util/recordbatch.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../vector/base.ts","../vector/binary.ts","../vector/bool.ts","../vector/date.ts","../vector/decimal.ts","../vector/dictionary.ts","../vector/fixedsizebinary.ts","../vector/fixedsizelist.ts","../vector/float.ts","../vector/interval.ts","../vector/int.ts","../vector/list.ts","../vector/map.ts","../vector/null.ts","../vector/struct.ts","../vector/timestamp.ts","../vector/time.ts","../vector/union.ts","../vector/utf8.ts","../util/fn.ts","../visitor/get.ts","../visitor/indexof.ts","../visitor/iterator.ts","../visitor/toarray.ts","../visitor/bytewidth.ts","../visitor/vectorctor.ts","../vector/index.ts","../table.ts","../recordbatch.ts","../ipc/reader.ts","../io/whatwg/builder.ts","../compute/predicate.ts","../compute/dataframe.ts","../Arrow.ts","../Arrow.dom.ts","../io/whatwg/iterable.ts","../io/whatwg/reader.ts","../io/whatwg/writer.ts","../node_modules/streamlit-component-lib/dist/ArrowTable.js","../node_modules/streamlit-component-lib/dist/streamlit.js","../node_modules/streamlit-component-lib/dist/StreamlitReact.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/underscore/modules/restArguments.js","../node_modules/underscore/modules/isObject.js","../node_modules/underscore/modules/isNull.js","../node_modules/underscore/modules/isUndefined.js","../node_modules/underscore/modules/isBoolean.js","../node_modules/underscore/modules/isElement.js","../node_modules/underscore/modules/_tagTester.js","../node_modules/underscore/modules/isString.js","../node_modules/underscore/modules/isNumber.js","../node_modules/underscore/modules/isDate.js","../node_modules/underscore/modules/isRegExp.js","../node_modules/underscore/modules/isError.js","../node_modules/underscore/modules/isSymbol.js","../node_modules/underscore/modules/isArrayBuffer.js","../node_modules/underscore/modules/isFunction.js","../node_modules/underscore/modules/_hasObjectTag.js","../node_modules/underscore/modules/_stringTagBug.js","../node_modules/underscore/modules/isDataView.js","../node_modules/underscore/modules/isArray.js","../node_modules/underscore/modules/_has.js","../node_modules/underscore/modules/isArguments.js","../node_modules/underscore/modules/isFinite.js","../node_modules/underscore/modules/isNaN.js","../node_modules/underscore/modules/constant.js","../node_modules/underscore/modules/_createSizePropertyCheck.js","../node_modules/underscore/modules/_shallowProperty.js","../node_modules/underscore/modules/_getByteLength.js","../node_modules/underscore/modules/_isBufferLike.js","../node_modules/underscore/modules/isTypedArray.js","../node_modules/underscore/modules/_getLength.js","../node_modules/underscore/modules/_collectNonEnumProps.js","../node_modules/underscore/modules/keys.js","../node_modules/underscore/modules/isEmpty.js","../node_modules/underscore/modules/isMatch.js","../node_modules/underscore/modules/underscore.js","../node_modules/underscore/modules/_toBufferView.js","../node_modules/underscore/modules/isEqual.js","../node_modules/underscore/modules/allKeys.js","../node_modules/underscore/modules/_methodFingerprint.js","../node_modules/underscore/modules/isMap.js","../node_modules/underscore/modules/isWeakMap.js","../node_modules/underscore/modules/isSet.js","../node_modules/underscore/modules/isWeakSet.js","../node_modules/underscore/modules/values.js","../node_modules/underscore/modules/pairs.js","../node_modules/underscore/modules/invert.js","../node_modules/underscore/modules/functions.js","../node_modules/underscore/modules/_createAssigner.js","../node_modules/underscore/modules/extend.js","../node_modules/underscore/modules/extendOwn.js","../node_modules/underscore/modules/defaults.js","../node_modules/underscore/modules/_baseCreate.js","../node_modules/underscore/modules/create.js","../node_modules/underscore/modules/clone.js","../node_modules/underscore/modules/tap.js","../node_modules/underscore/modules/toPath.js","../node_modules/underscore/modules/_toPath.js","../node_modules/underscore/modules/_deepGet.js","../node_modules/underscore/modules/get.js","../node_modules/underscore/modules/has.js","../node_modules/underscore/modules/identity.js","../node_modules/underscore/modules/matcher.js","../node_modules/underscore/modules/property.js","../node_modules/underscore/modules/_optimizeCb.js","../node_modules/underscore/modules/_baseIteratee.js","../node_modules/underscore/modules/iteratee.js","../node_modules/underscore/modules/_cb.js","../node_modules/underscore/modules/mapObject.js","../node_modules/underscore/modules/noop.js","../node_modules/underscore/modules/propertyOf.js","../node_modules/underscore/modules/times.js","../node_modules/underscore/modules/random.js","../node_modules/underscore/modules/now.js","../node_modules/underscore/modules/_createEscaper.js","../node_modules/underscore/modules/_escapeMap.js","../node_modules/underscore/modules/escape.js","../node_modules/underscore/modules/unescape.js","../node_modules/underscore/modules/_unescapeMap.js","../node_modules/underscore/modules/templateSettings.js","../node_modules/underscore/modules/template.js","../node_modules/underscore/modules/result.js","../node_modules/underscore/modules/uniqueId.js","../node_modules/underscore/modules/chain.js","../node_modules/underscore/modules/_executeBound.js","../node_modules/underscore/modules/partial.js","../node_modules/underscore/modules/bind.js","../node_modules/underscore/modules/_isArrayLike.js","../node_modules/underscore/modules/_flatten.js","../node_modules/underscore/modules/bindAll.js","../node_modules/underscore/modules/memoize.js","../node_modules/underscore/modules/delay.js","../node_modules/underscore/modules/defer.js","../node_modules/underscore/modules/throttle.js","../node_modules/underscore/modules/debounce.js","../node_modules/underscore/modules/wrap.js","../node_modules/underscore/modules/negate.js","../node_modules/underscore/modules/compose.js","../node_modules/underscore/modules/after.js","../node_modules/underscore/modules/before.js","../node_modules/underscore/modules/once.js","../node_modules/underscore/modules/findKey.js","../node_modules/underscore/modules/_createPredicateIndexFinder.js","../node_modules/underscore/modules/findIndex.js","../node_modules/underscore/modules/findLastIndex.js","../node_modules/underscore/modules/sortedIndex.js","../node_modules/underscore/modules/_createIndexFinder.js","../node_modules/underscore/modules/indexOf.js","../node_modules/underscore/modules/lastIndexOf.js","../node_modules/underscore/modules/find.js","../node_modules/underscore/modules/findWhere.js","../node_modules/underscore/modules/each.js","../node_modules/underscore/modules/map.js","../node_modules/underscore/modules/_createReduce.js","../node_modules/underscore/modules/reduce.js","../node_modules/underscore/modules/reduceRight.js","../node_modules/underscore/modules/filter.js","../node_modules/underscore/modules/reject.js","../node_modules/underscore/modules/every.js","../node_modules/underscore/modules/some.js","../node_modules/underscore/modules/contains.js","../node_modules/underscore/modules/invoke.js","../node_modules/underscore/modules/pluck.js","../node_modules/underscore/modules/where.js","../node_modules/underscore/modules/max.js","../node_modules/underscore/modules/min.js","../node_modules/underscore/modules/toArray.js","../node_modules/underscore/modules/sample.js","../node_modules/underscore/modules/shuffle.js","../node_modules/underscore/modules/sortBy.js","../node_modules/underscore/modules/_group.js","../node_modules/underscore/modules/groupBy.js","../node_modules/underscore/modules/indexBy.js","../node_modules/underscore/modules/countBy.js","../node_modules/underscore/modules/partition.js","../node_modules/underscore/modules/size.js","../node_modules/underscore/modules/_keyInObj.js","../node_modules/underscore/modules/pick.js","../node_modules/underscore/modules/omit.js","../node_modules/underscore/modules/initial.js","../node_modules/underscore/modules/first.js","../node_modules/underscore/modules/rest.js","../node_modules/underscore/modules/last.js","../node_modules/underscore/modules/compact.js","../node_modules/underscore/modules/flatten.js","../node_modules/underscore/modules/difference.js","../node_modules/underscore/modules/without.js","../node_modules/underscore/modules/uniq.js","../node_modules/underscore/modules/union.js","../node_modules/underscore/modules/intersection.js","../node_modules/underscore/modules/unzip.js","../node_modules/underscore/modules/zip.js","../node_modules/underscore/modules/object.js","../node_modules/underscore/modules/range.js","../node_modules/underscore/modules/chunk.js","../node_modules/underscore/modules/_chainResult.js","../node_modules/underscore/modules/mixin.js","../node_modules/underscore/modules/underscore-array-methods.js","../node_modules/underscore/modules/index-default.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/object-assign/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/webpack/buildin/global.js"],"names":["module","exports","VERSION","root","self","global","Function","ArrayProto","Array","prototype","ObjProto","Object","SymbolProto","Symbol","push","slice","toString","hasOwnProperty","supportsArrayBuffer","ArrayBuffer","supportsDataView","DataView","nativeIsArray","isArray","nativeKeys","keys","nativeCreate","create","nativeIsView","isView","_isNaN","isNaN","_isFinite","isFinite","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","MAX_ARRAY_INDEX","Math","pow","require","privateData","WeakMap","wrappers","pd","event","retv","get","console","assert","setCancelFlag","data","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","this","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","defineProperty","value","enumerable","i","length","key","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","wrapper","BaseEvent","CustomEvent","call","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","type","target","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","window","setPrototypeOf","listenersMap","isObject","x","getListeners","listeners","TypeError","defineEventAttribute","eventTargetPrototype","eventName","node","listenerType","listener","next","prev","delete","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","types","Map","addEventListener","options","optionsIsObj","capture","undefined","removeEventListener","dispatchEvent","wrappedEvent","wrapEvent","err","handleEvent","setEventPhase","setCurrentTarget","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","o","minLen","n","name","from","test","_createForOfIteratorHelper","allowArrayLike","it","iterator","F","s","done","e","_e","f","normalCompletion","didErr","step","_e2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","Promise","then","_asyncToGenerator","fn","args","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_slicedToArray","_i","_s","_arr","_n","_d","_AwaitValue","wrapped","_awaitAsyncGenerator","AsyncGenerator","front","back","resume","result","wrappedAwait","settle","_invoke","request","_wrapAsyncGenerator","asyncIterator","_asyncIterator","iterable","method","async","sync","retry","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","r","ret","thr","_asyncGeneratorDelegate","inner","awaitWrap","iter","waiting","pump","flatbuffers","inRange","a","min","max","ToDictionary","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","Error","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","j","finish","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","b","c","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","endOfStream","read","shift","prepend","token","unshift","pop","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","decode","input","byteOffset","byteLength","input_stream","code_points","indexOf","cp","codePointsToString","encode","opt_string","string","u","d","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","encodeUtf8","encoder","_setPrototypeOf","p","__proto__","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_typeof","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","ITERATOR_DONE","freeze","_json","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","_values","resolvers","_closedPromise","_closedPromiseResolve","reason","return","_ensureOpen","_error","_","abort","close","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigIntCtor","BigIntAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BigInt64ArrayCtor","BigUint64ArrayUnavailableError","BigUint64Array","BigUint64ArrayCtor","isNumber","isBoolean","isFunction","isPromise","isIterable","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","toArrayBufferViewIterator","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","src","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","collapseContiguousByteRanges","reduce","index","Infinity","toArrayBufferView","ArrayBufferViewCtor","BYTES_PER_ELEMENT","toInt8Array","Int8Array","toInt16Array","Int16Array","toInt32Array","toUint16Array","toUint32Array","Uint32Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","Uint8ClampedArray","ArrayCtor","wrap","buffers","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","toArrayBufferViewAsyncIterator","emit","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","fromAsyncIterable","fromDOMStream","fromNodeStream","byteRange","cmd","bufferLength","threw","throw","releaseLock","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","readInto","onEvent","cleanup","events","evt","destroy","race","map","_defineProperty","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","_superPropBase","property","receiver","base","desc","flatbuf","arrow","apache","org","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","id","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","BufferType","iterateBits","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","values","xs","begin","context","byteIndex","remaining","popcnt_bit_range","lhs","rhs","sum","rhsInside","lhsInside","popcnt_array","cnt","pos","view","popcnt_uint32","getUint32","getUint16","getUint8","uint32","_toConsumableArray","nodes","visit","getVisitFn","throwIfNotFound","_node","visitor","dtype","inferDType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","schema","compareFields","fields","others","every","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","children","compareInterval","indices","dictionary","toStringTag","ArrayType","child","valueType","join","typeIdToChildIndex","idx","atomicDictionaryId","getId","strideForType","nullCount","childData","floor","_nullCount","Data","stride","nullBitmap","childStride","_sliceBuffers","clone","_sliceChildren","newLength","fill","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","valueToString","toPrimitive","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","roundLengthUpToNearest64Bytes","BPE","_resize","extra","reserved","array","reserve","numValid","val","cur","_ArrayType64","buffer64","ArrayType64","nulls","_nulls","_isValid","new","flush","numInvalid","_offsets","_typeIds","reservedLength","reservedByteLength","setValid","isValid","setValue","_setValue","valid","numChildren","offsets","last","queueingStrategy","highWaterMark","sizeProperty","numChunks","append","toVector","opts","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","concat","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","Parent","Class","bind","bignumToString","bignumToBigInt","isArrowBigNumSymbol","for","BigNum","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","hi","lo","signed","words","number","decimalToString","digits","base64","base32","checks","reverse","toJSON","hint","assign","memo","num","BN","toBigInt","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","parent","numKeys","ktoi","itov","getValue","getIndex","ki","vi","kr","vr","k","v","has","callbackfn","thisArg","callback","m","str","createRowProxy","getChildAt","defineRowProxyProperties","findIndex","tmp","row","getter","setter","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","clampIndex","adjust","clampRange","end","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","chunk","isDictionary","_indices","Chunked","flatten","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","element","indexOfInternal","toArray","arraySet","typedSet","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","vectors","selectChunkArgs","_field","metadata","Column","column","rest","some","_chunk","selectArgs","Ctor","vals","_selectArgs","selectFieldArgs","_selectChunkArgs","selectVectorChildrenArgs","_selectVectorChildrenArgs","res","entries","fieldIndex","valueIndex","dictionaries","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","m1","m2","_run","run","childIndex","_valueToChildTypeId","childTypeId","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","values64","long","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","newBuilder","defaultOptions","getChildOptions","T","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","_Footer","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","numRecordBatches","block","getRecordBatch","numDictionaries","getDictionaryBatch","buf","footer","getRootAsFooter","startRecordBatchesVector","rb","startDictionariesVector","db","dictionaryBatchesOffset","finishFooterBuffer","_footer","recordBatchesLength","dictionariesLength","fileBlock","FileBlock","createBlock","toUint8Array","peek","AsyncByteStream","body","closed","cancel","readAt","getInt32","nBytes","file","_handle","stat","bytesRead","intAsHex","kPowersOfTen","L","R","product","lessThan","_times","_plus","out_buffer","fromString","out","posn","group","parseInt","substr","multiple","times","plus","left","right","this_high","other_high","negate","startsWith","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","Int128","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","binaryDataFromJSON","isBool","isUtf8","joined","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","buffersFromJSON","schemaFieldsFromJSON","_schema","fromJSON","fieldChildrenFromJSON","fieldNodes","validity","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_isDelta","_id","decodeFieldNodes","batch","nodesLength","decodeBuffers","bufferRegions","buffersLength","decodeSchemaFields","fieldsLength","decodeFieldChildren","childrenLength","decodeCustomMetadata","entry","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","_body","_batchIndex","_dictionaryIndex","batches","flattenDataSources","MAGIC_STR","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","_byteLength","_bufferRegions","RangeError","isNull","addBuffer","_nullV","assembler","VectorAssembler","vectorChildren","assembleResult","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writeAll","writeAllAsync","reset","sink","objectMode","_writeFooter","compareTo","_writeSchema","payload","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","write","_writeMessage","assemble","_writeDictionaries","_writeBodyBuffers","padding","_writeDictionaryBatch","writableStrategy","readableStrategy","writer","RecordBatchStreamWriter","_writeMagic","RecordBatchFileWriter","noopBuf","nullBufs","bitmapLength","ensureSameLengthData","batchLength","l","batchData","_changeLengthAndBackfillNullBitmap","distributeColumnsIntoRecordBatches","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","numColumns","Number","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","_bindDataAccessors","VectorName","isConcatSpreadable","vectorFromValuesWithType","ArrowType","InputType","typeCtor","dataCtor","ctor","is64bit","_values64","toBigInt64Array","toBigUint64Array","_row","bound","partial0","partial2","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","vectorIterator","getFn","nullByte","nullBit","nullableIterator","arrayOfVector","variableWidthColumnErrorMessage","____","visitFields","newDataType","throughIterable","transform","throughAsyncIterable","getByteWidth","wrapNullableSet","VectorCtor","partialType0","getColumnAt","getColumnIndex","Writer","nameToIndex","selectAt","columnName","newIdx","oldToNew","_f","_fs","empty","fromStruct","tableFromIterable","tableFromAsyncIterable","isSync","open","opening","cols","_dictionaries","collect","fs","vs","DictionaryCollector","readAllSync","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchReader","fromArrowJSON","fromFileHandle","fromAsyncByteStream","fromByteStream","readAllAsync","_recordBatchIndex","_loadVectors","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","_readFooter","_readDictionaryBatch","seek","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","ge","le","eq","colidx","expr","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","accum","And","Or","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","func","countBy","scan","scanReverse","predicate","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","_predicate","isBound","FilteredDataFrame","and","bm","hwm","pull","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ComponentMessageType","ArrowTable","indexBuffer","columnsBuffer","styler","_this","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","numCols","rows","dataRows","dataColumns","serialize","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","document","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isBigIntArray","isTypedArray","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","disabled","theme","_injectTheme","eventData","detail","argsDataframe","argsDataframeArrow","_a","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","style","createElement","head","appendChild","innerHTML","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","__extends","extendStatics","__","_super","StreamlitComponentBase","componentDidMount","componentDidUpdate","React","PureComponent","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","restArguments","startIndex","isUndefined","isElement","nodeType","tagTester","tag","nodelist","childNodes","hasStringTagBug","hasObjectTag","isIE11","isDataView","getInt8","isArrayBuffer","isArguments","isSymbol","parseFloat","constant","createSizePropertyCheck","getSizeProperty","collection","shallowProperty","getByteLength","typedArrayPattern","isBufferLike","collectNonEnumProps","hash","contains","emulatedSet","nonEnumIdx","prop","isEmpty","getLength","isString","isMatch","attrs","_keys","_wrapped","toBufferView","bufferSource","tagDataView","aStack","bStack","deepEq","className","areArrays","aCtor","bCtor","isEqual","allKeys","ie11fingerprint","methods","weakMapMethods","forEachName","commonInit","mapTail","mapMethods","setMethods","pairs","invert","functions","sort","createAssigner","keysFunc","defaults","baseCreate","extendOwn","extend","tap","interceptor","toPath","path","deepGet","_has","identity","matcher","optimizeCb","argCount","accumulator","baseIteratee","iteratee","cb","mapObject","results","currentKey","noop","propertyOf","random","getTime","createEscaper","escaper","match","testRegexp","RegExp","replaceRegexp","replace","escapeMap","templateSettings","evaluate","interpolate","escape","noMatch","escapes","escapeRegExp","escapeChar","bareIdentifier","template","text","settings","oldSettings","argument","variable","fallback","idCounter","uniqueId","prefix","chain","_chain","executeBound","sourceFunc","boundFunc","callingContext","partial","boundArgs","placeholder","callArgs","depth","strict","output","isArrayLike","memoize","hasher","cache","address","wait","setTimeout","delay","throttle","timeout","previous","later","leading","throttled","_now","clearTimeout","trailing","debounce","immediate","passed","debounced","_args","compose","after","before","findKey","createPredicateIndexFinder","dir","sortedIndex","createIndexFinder","predicateFind","item","findLastIndex","find","findWhere","each","createReduce","reducer","initial","list","guard","contextPath","pluck","where","computed","lastComputed","reStrSymbol","sample","rand","shuffle","sortBy","criteria","behavior","partition","pass","keyInObj","pick","first","compact","_flatten","otherArrays","difference","uniq","isSorted","seen","arrays","intersection","argsLength","unzip","range","stop","chainResult","mixin","allExports","g","q","w","z","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","K","ref","__self","__source","M","_owner","O","P","Q","keyPrefix","S","U","V","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","only","Component","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createFactory","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","propIsEnumerable","toObject","test1","test2","test3","split","letter","shouldUseNative","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iteratorMethod","isGeneratorFunction","genFun","mark","awrap","skipTempReset","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis"],"mappings":"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","file":"static/js/2.772f48f6.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","// Current version.\nexport var VERSION = '1.13.3';\n\n// Establish the root object, `window` (`self`) in the browser, `global`\n// on the server, or `this` in some virtual machines. We use `self`\n// instead of `window` for `WebWorker` support.\nexport var root = (typeof self == 'object' && self.self === self && self) ||\n          (typeof global == 'object' && global.global === global && global) ||\n          Function('return this')() ||\n          {};\n\n// Save bytes in the minified (but not gzipped) version:\nexport var ArrayProto = Array.prototype, ObjProto = Object.prototype;\nexport var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n// Create quick reference variables for speed access to core prototypes.\nexport var push = ArrayProto.push,\n    slice = ArrayProto.slice,\n    toString = ObjProto.toString,\n    hasOwnProperty = ObjProto.hasOwnProperty;\n\n// Modern feature detection.\nexport var supportsArrayBuffer = typeof ArrayBuffer !== 'undefined',\n    supportsDataView = typeof DataView !== 'undefined';\n\n// All **ECMAScript 5+** native function implementations that we hope to use\n// are declared here.\nexport var nativeIsArray = Array.isArray,\n    nativeKeys = Object.keys,\n    nativeCreate = Object.create,\n    nativeIsView = supportsArrayBuffer && ArrayBuffer.isView;\n\n// Create references to these builtin functions because we override them.\nexport var _isNaN = isNaN,\n    _isFinite = isFinite;\n\n// Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\nexport var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\nexport var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n  'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n// The largest integer that can be represented exactly.\nexport var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _AwaitValue(value) {\n  this.wrapped = value;\n}","import AwaitValue from \"./AwaitValue.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}","import AwaitValue from \"./AwaitValue.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nAsyncGenerator.prototype[typeof Symbol === \"function\" && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n};\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","export default function _asyncIterator(iterable) {\n  var method,\n      async,\n      sync,\n      retry = 2;\n\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}\n\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","export default function _asyncGeneratorDelegate(inner, awaitWrap) {\n  var iter = {},\n      waiting = false;\n\n  function pump(key, value) {\n    waiting = true;\n    value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    });\n    return {\n      done: false,\n      value: awaitWrap(value)\n    };\n  }\n\n  ;\n\n  iter[typeof Symbol !== \"undefined\" && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  };\n\n  iter.next = function (value) {\n    if (waiting) {\n      waiting = false;\n      return value;\n    }\n\n    return pump(\"next\", value);\n  };\n\n  if (typeof inner[\"throw\"] === \"function\") {\n    iter[\"throw\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        throw value;\n      }\n\n      return pump(\"throw\", value);\n    };\n  }\n\n  if (typeof inner[\"return\"] === \"function\") {\n    iter[\"return\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n\n      return pump(\"return\", value);\n    };\n  }\n\n  return iter;\n}","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        var theme = data[\"theme\"];\n        if (theme) {\n            _injectTheme(theme);\n        }\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args, theme: theme };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a = df.data, data = _a.data, index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nexport { Streamlit };\nvar _injectTheme = function (theme) {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    style.innerHTML = \"\\n    :root {\\n      --primary-color: \" + theme.primaryColor + \";\\n      --background-color: \" + theme.backgroundColor + \";\\n      --secondary-background-color: \" + theme.secondaryBackgroundColor + \";\\n      --text-color: \" + theme.textColor + \";\\n      --font: \" + theme.font + \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \";\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    var isBigIntArray = false;\n    try {\n        isBigIntArray =\n            value instanceof BigInt64Array || value instanceof BigUint64Array;\n    }\n    catch (e) {\n        // Ignore cause Safari does not support this\n        // https://caniuse.com/mdn-javascript_builtins_bigint64array\n    }\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        isBigIntArray);\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nexport default function restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function() {\n    var length = Math.max(arguments.length - startIndex, 0),\n        rest = Array(length),\n        index = 0;\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n    switch (startIndex) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, arguments[0], rest);\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\n    }\n    var args = Array(startIndex + 1);\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}\n","// Is a given variable an object?\nexport default function isObject(obj) {\n  var type = typeof obj;\n  return type === 'function' || (type === 'object' && !!obj);\n}\n","// Is a given value equal to null?\nexport default function isNull(obj) {\n  return obj === null;\n}\n","// Is a given variable undefined?\nexport default function isUndefined(obj) {\n  return obj === void 0;\n}\n","import { toString } from './_setup.js';\n\n// Is a given value a boolean?\nexport default function isBoolean(obj) {\n  return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n}\n","// Is a given value a DOM element?\nexport default function isElement(obj) {\n  return !!(obj && obj.nodeType === 1);\n}\n","import { toString } from './_setup.js';\n\n// Internal function for creating a `toString`-based type tester.\nexport default function tagTester(name) {\n  var tag = '[object ' + name + ']';\n  return function(obj) {\n    return toString.call(obj) === tag;\n  };\n}\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('String');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Number');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Date');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('RegExp');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Error');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Symbol');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('ArrayBuffer');\n","import tagTester from './_tagTester.js';\nimport { root } from './_setup.js';\n\nvar isFunction = tagTester('Function');\n\n// Optimize `isFunction` if appropriate. Work around some `typeof` bugs in old\n// v8, IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\nvar nodelist = root.document && root.document.childNodes;\nif (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n  isFunction = function(obj) {\n    return typeof obj == 'function' || false;\n  };\n}\n\nexport default isFunction;\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Object');\n","import { supportsDataView } from './_setup.js';\nimport hasObjectTag from './_hasObjectTag.js';\n\n// In IE 10 - Edge 13, `DataView` has string tag `'[object Object]'`.\n// In IE 11, the most common among them, this problem also applies to\n// `Map`, `WeakMap` and `Set`.\nexport var hasStringTagBug = (\n      supportsDataView && hasObjectTag(new DataView(new ArrayBuffer(8)))\n    ),\n    isIE11 = (typeof Map !== 'undefined' && hasObjectTag(new Map));\n","import tagTester from './_tagTester.js';\nimport isFunction from './isFunction.js';\nimport isArrayBuffer from './isArrayBuffer.js';\nimport { hasStringTagBug } from './_stringTagBug.js';\n\nvar isDataView = tagTester('DataView');\n\n// In IE 10 - Edge 13, we need a different heuristic\n// to determine whether an object is a `DataView`.\nfunction ie10IsDataView(obj) {\n  return obj != null && isFunction(obj.getInt8) && isArrayBuffer(obj.buffer);\n}\n\nexport default (hasStringTagBug ? ie10IsDataView : isDataView);\n","import { nativeIsArray } from './_setup.js';\nimport tagTester from './_tagTester.js';\n\n// Is a given value an array?\n// Delegates to ECMA5's native `Array.isArray`.\nexport default nativeIsArray || tagTester('Array');\n","import { hasOwnProperty } from './_setup.js';\n\n// Internal function to check whether `key` is an own property name of `obj`.\nexport default function has(obj, key) {\n  return obj != null && hasOwnProperty.call(obj, key);\n}\n","import tagTester from './_tagTester.js';\nimport has from './_has.js';\n\nvar isArguments = tagTester('Arguments');\n\n// Define a fallback version of the method in browsers (ahem, IE < 9), where\n// there isn't any inspectable \"Arguments\" type.\n(function() {\n  if (!isArguments(arguments)) {\n    isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n}());\n\nexport default isArguments;\n","import { _isFinite } from './_setup.js';\nimport isSymbol from './isSymbol.js';\n\n// Is a given object a finite number?\nexport default function isFinite(obj) {\n  return !isSymbol(obj) && _isFinite(obj) && !isNaN(parseFloat(obj));\n}\n","import { _isNaN } from './_setup.js';\nimport isNumber from './isNumber.js';\n\n// Is the given value `NaN`?\nexport default function isNaN(obj) {\n  return isNumber(obj) && _isNaN(obj);\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function constant(value) {\n  return function() {\n    return value;\n  };\n}\n","import { MAX_ARRAY_INDEX } from './_setup.js';\n\n// Common internal logic for `isArrayLike` and `isBufferLike`.\nexport default function createSizePropertyCheck(getSizeProperty) {\n  return function(collection) {\n    var sizeProperty = getSizeProperty(collection);\n    return typeof sizeProperty == 'number' && sizeProperty >= 0 && sizeProperty <= MAX_ARRAY_INDEX;\n  }\n}\n","// Internal helper to generate a function to obtain property `key` from `obj`.\nexport default function shallowProperty(key) {\n  return function(obj) {\n    return obj == null ? void 0 : obj[key];\n  };\n}\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `byteLength` property of an object.\nexport default shallowProperty('byteLength');\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getByteLength from './_getByteLength.js';\n\n// Internal helper to determine whether we should spend extensive checks against\n// `ArrayBuffer` et al.\nexport default createSizePropertyCheck(getByteLength);\n","import { supportsArrayBuffer, nativeIsView, toString } from './_setup.js';\nimport isDataView from './isDataView.js';\nimport constant from './constant.js';\nimport isBufferLike from './_isBufferLike.js';\n\n// Is a given value a typed array?\nvar typedArrayPattern = /\\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\\]/;\nfunction isTypedArray(obj) {\n  // `ArrayBuffer.isView` is the most future-proof, so use it when available.\n  // Otherwise, fall back on the above regular expression.\n  return nativeIsView ? (nativeIsView(obj) && !isDataView(obj)) :\n                isBufferLike(obj) && typedArrayPattern.test(toString.call(obj));\n}\n\nexport default supportsArrayBuffer ? isTypedArray : constant(false);\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `length` property of an object.\nexport default shallowProperty('length');\n","import { nonEnumerableProps, ObjProto } from './_setup.js';\nimport isFunction from './isFunction.js';\nimport has from './_has.js';\n\n// Internal helper to create a simple lookup structure.\n// `collectNonEnumProps` used to depend on `_.contains`, but this led to\n// circular imports. `emulatedSet` is a one-off solution that only works for\n// arrays of strings.\nfunction emulatedSet(keys) {\n  var hash = {};\n  for (var l = keys.length, i = 0; i < l; ++i) hash[keys[i]] = true;\n  return {\n    contains: function(key) { return hash[key] === true; },\n    push: function(key) {\n      hash[key] = true;\n      return keys.push(key);\n    }\n  };\n}\n\n// Internal helper. Checks `keys` for the presence of keys in IE < 9 that won't\n// be iterated by `for key in ...` and thus missed. Extends `keys` in place if\n// needed.\nexport default function collectNonEnumProps(obj, keys) {\n  keys = emulatedSet(keys);\n  var nonEnumIdx = nonEnumerableProps.length;\n  var constructor = obj.constructor;\n  var proto = (isFunction(constructor) && constructor.prototype) || ObjProto;\n\n  // Constructor is a special case.\n  var prop = 'constructor';\n  if (has(obj, prop) && !keys.contains(prop)) keys.push(prop);\n\n  while (nonEnumIdx--) {\n    prop = nonEnumerableProps[nonEnumIdx];\n    if (prop in obj && obj[prop] !== proto[prop] && !keys.contains(prop)) {\n      keys.push(prop);\n    }\n  }\n}\n","import isObject from './isObject.js';\nimport { nativeKeys, hasEnumBug } from './_setup.js';\nimport has from './_has.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve the names of an object's own properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`.\nexport default function keys(obj) {\n  if (!isObject(obj)) return [];\n  if (nativeKeys) return nativeKeys(obj);\n  var keys = [];\n  for (var key in obj) if (has(obj, key)) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isArray from './isArray.js';\nimport isString from './isString.js';\nimport isArguments from './isArguments.js';\nimport keys from './keys.js';\n\n// Is a given array, string, or object empty?\n// An \"empty\" object has no enumerable own-properties.\nexport default function isEmpty(obj) {\n  if (obj == null) return true;\n  // Skip the more expensive `toString`-based type checks if `obj` has no\n  // `.length`.\n  var length = getLength(obj);\n  if (typeof length == 'number' && (\n    isArray(obj) || isString(obj) || isArguments(obj)\n  )) return length === 0;\n  return getLength(keys(obj)) === 0;\n}\n","import keys from './keys.js';\n\n// Returns whether an object has a given set of `key:value` pairs.\nexport default function isMatch(object, attrs) {\n  var _keys = keys(attrs), length = _keys.length;\n  if (object == null) return !length;\n  var obj = Object(object);\n  for (var i = 0; i < length; i++) {\n    var key = _keys[i];\n    if (attrs[key] !== obj[key] || !(key in obj)) return false;\n  }\n  return true;\n}\n","import { VERSION } from './_setup.js';\n\n// If Underscore is called as a function, it returns a wrapped object that can\n// be used OO-style. This wrapper holds altered versions of all functions added\n// through `_.mixin`. Wrapped objects may be chained.\nexport default function _(obj) {\n  if (obj instanceof _) return obj;\n  if (!(this instanceof _)) return new _(obj);\n  this._wrapped = obj;\n}\n\n_.VERSION = VERSION;\n\n// Extracts the result from a wrapped and chained object.\n_.prototype.value = function() {\n  return this._wrapped;\n};\n\n// Provide unwrapping proxies for some methods used in engine operations\n// such as arithmetic and JSON stringification.\n_.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n_.prototype.toString = function() {\n  return String(this._wrapped);\n};\n","import getByteLength from './_getByteLength.js';\n\n// Internal function to wrap or shallow-copy an ArrayBuffer,\n// typed array or DataView to a new view, reusing the buffer.\nexport default function toBufferView(bufferSource) {\n  return new Uint8Array(\n    bufferSource.buffer || bufferSource,\n    bufferSource.byteOffset || 0,\n    getByteLength(bufferSource)\n  );\n}\n","import _ from './underscore.js';\nimport { toString, SymbolProto } from './_setup.js';\nimport getByteLength from './_getByteLength.js';\nimport isTypedArray from './isTypedArray.js';\nimport isFunction from './isFunction.js';\nimport { hasStringTagBug }  from './_stringTagBug.js';\nimport isDataView from './isDataView.js';\nimport keys from './keys.js';\nimport has from './_has.js';\nimport toBufferView from './_toBufferView.js';\n\n// We use this string twice, so give it a name for minification.\nvar tagDataView = '[object DataView]';\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction eq(a, b, aStack, bStack) {\n  // Identical objects are equal. `0 === -0`, but they aren't identical.\n  // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  // `null` or `undefined` only equal to itself (strict comparison).\n  if (a == null || b == null) return false;\n  // `NaN`s are equivalent, but non-reflexive.\n  if (a !== a) return b !== b;\n  // Exhaust primitive checks\n  var type = typeof a;\n  if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n  return deepEq(a, b, aStack, bStack);\n}\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction deepEq(a, b, aStack, bStack) {\n  // Unwrap any wrapped objects.\n  if (a instanceof _) a = a._wrapped;\n  if (b instanceof _) b = b._wrapped;\n  // Compare `[[Class]]` names.\n  var className = toString.call(a);\n  if (className !== toString.call(b)) return false;\n  // Work around a bug in IE 10 - Edge 13.\n  if (hasStringTagBug && className == '[object Object]' && isDataView(a)) {\n    if (!isDataView(b)) return false;\n    className = tagDataView;\n  }\n  switch (className) {\n    // These types are compared by value.\n    case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n    case '[object String]':\n      // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n      // equivalent to `new String(\"5\")`.\n      return '' + a === '' + b;\n    case '[object Number]':\n      // `NaN`s are equivalent, but non-reflexive.\n      // Object(NaN) is equivalent to NaN.\n      if (+a !== +a) return +b !== +b;\n      // An `egal` comparison is performed for other numeric values.\n      return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n    case '[object Date]':\n    case '[object Boolean]':\n      // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n      // millisecond representations. Note that invalid dates with millisecond representations\n      // of `NaN` are not equivalent.\n      return +a === +b;\n    case '[object Symbol]':\n      return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    case '[object ArrayBuffer]':\n    case tagDataView:\n      // Coerce to typed array so we can fall through.\n      return deepEq(toBufferView(a), toBufferView(b), aStack, bStack);\n  }\n\n  var areArrays = className === '[object Array]';\n  if (!areArrays && isTypedArray(a)) {\n      var byteLength = getByteLength(a);\n      if (byteLength !== getByteLength(b)) return false;\n      if (a.buffer === b.buffer && a.byteOffset === b.byteOffset) return true;\n      areArrays = true;\n  }\n  if (!areArrays) {\n    if (typeof a != 'object' || typeof b != 'object') return false;\n\n    // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\n                             isFunction(bCtor) && bCtor instanceof bCtor)\n                        && ('constructor' in a && 'constructor' in b)) {\n      return false;\n    }\n  }\n  // Assume equality for cyclic structures. The algorithm for detecting cyclic\n  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n  // Initializing stack of traversed objects.\n  // It's done here since we only need them for objects and arrays comparison.\n  aStack = aStack || [];\n  bStack = bStack || [];\n  var length = aStack.length;\n  while (length--) {\n    // Linear search. Performance is inversely proportional to the number of\n    // unique nested structures.\n    if (aStack[length] === a) return bStack[length] === b;\n  }\n\n  // Add the first object to the stack of traversed objects.\n  aStack.push(a);\n  bStack.push(b);\n\n  // Recursively compare objects and arrays.\n  if (areArrays) {\n    // Compare array lengths to determine if a deep comparison is necessary.\n    length = a.length;\n    if (length !== b.length) return false;\n    // Deep compare the contents, ignoring non-numeric properties.\n    while (length--) {\n      if (!eq(a[length], b[length], aStack, bStack)) return false;\n    }\n  } else {\n    // Deep compare objects.\n    var _keys = keys(a), key;\n    length = _keys.length;\n    // Ensure that both objects contain the same number of properties before comparing deep equality.\n    if (keys(b).length !== length) return false;\n    while (length--) {\n      // Deep compare each member\n      key = _keys[length];\n      if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n    }\n  }\n  // Remove the first object from the stack of traversed objects.\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\n// Perform a deep comparison to check if two objects are equal.\nexport default function isEqual(a, b) {\n  return eq(a, b);\n}\n","import isObject from './isObject.js';\nimport { hasEnumBug } from './_setup.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve all the enumerable property names of an object.\nexport default function allKeys(obj) {\n  if (!isObject(obj)) return [];\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isFunction from './isFunction.js';\nimport allKeys from './allKeys.js';\n\n// Since the regular `Object.prototype.toString` type tests don't work for\n// some types in IE 11, we use a fingerprinting heuristic instead, based\n// on the methods. It's not great, but it's the best we got.\n// The fingerprint method lists are defined below.\nexport function ie11fingerprint(methods) {\n  var length = getLength(methods);\n  return function(obj) {\n    if (obj == null) return false;\n    // `Map`, `WeakMap` and `Set` have no enumerable keys.\n    var keys = allKeys(obj);\n    if (getLength(keys)) return false;\n    for (var i = 0; i < length; i++) {\n      if (!isFunction(obj[methods[i]])) return false;\n    }\n    // If we are testing against `WeakMap`, we need to ensure that\n    // `obj` doesn't have a `forEach` method in order to distinguish\n    // it from a regular `Map`.\n    return methods !== weakMapMethods || !isFunction(obj[forEachName]);\n  };\n}\n\n// In the interest of compact minification, we write\n// each string in the fingerprints only once.\nvar forEachName = 'forEach',\n    hasName = 'has',\n    commonInit = ['clear', 'delete'],\n    mapTail = ['get', hasName, 'set'];\n\n// `Map`, `WeakMap` and `Set` each have slightly different\n// combinations of the above sublists.\nexport var mapMethods = commonInit.concat(forEachName, mapTail),\n    weakMapMethods = commonInit.concat(mapTail),\n    setMethods = ['add'].concat(commonInit, forEachName, hasName);\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, mapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(mapMethods) : tagTester('Map');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, weakMapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(weakMapMethods) : tagTester('WeakMap');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, setMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(setMethods) : tagTester('Set');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('WeakSet');\n","import keys from './keys.js';\n\n// Retrieve the values of an object's properties.\nexport default function values(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var values = Array(length);\n  for (var i = 0; i < length; i++) {\n    values[i] = obj[_keys[i]];\n  }\n  return values;\n}\n","import keys from './keys.js';\n\n// Convert an object into a list of `[key, value]` pairs.\n// The opposite of `_.object` with one argument.\nexport default function pairs(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var pairs = Array(length);\n  for (var i = 0; i < length; i++) {\n    pairs[i] = [_keys[i], obj[_keys[i]]];\n  }\n  return pairs;\n}\n","import keys from './keys.js';\n\n// Invert the keys and values of an object. The values must be serializable.\nexport default function invert(obj) {\n  var result = {};\n  var _keys = keys(obj);\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    result[obj[_keys[i]]] = _keys[i];\n  }\n  return result;\n}\n","import isFunction from './isFunction.js';\n\n// Return a sorted list of the function names available on the object.\nexport default function functions(obj) {\n  var names = [];\n  for (var key in obj) {\n    if (isFunction(obj[key])) names.push(key);\n  }\n  return names.sort();\n}\n","// An internal function for creating assigner functions.\nexport default function createAssigner(keysFunc, defaults) {\n  return function(obj) {\n    var length = arguments.length;\n    if (defaults) obj = Object(obj);\n    if (length < 2 || obj == null) return obj;\n    for (var index = 1; index < length; index++) {\n      var source = arguments[index],\n          keys = keysFunc(source),\n          l = keys.length;\n      for (var i = 0; i < l; i++) {\n        var key = keys[i];\n        if (!defaults || obj[key] === void 0) obj[key] = source[key];\n      }\n    }\n    return obj;\n  };\n}\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Extend a given object with all the properties in passed-in object(s).\nexport default createAssigner(allKeys);\n","import createAssigner from './_createAssigner.js';\nimport keys from './keys.js';\n\n// Assigns a given object with all the own properties in the passed-in\n// object(s).\n// (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\nexport default createAssigner(keys);\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Fill in a given object with default properties.\nexport default createAssigner(allKeys, true);\n","import isObject from './isObject.js';\nimport { nativeCreate } from './_setup.js';\n\n// Create a naked function reference for surrogate-prototype-swapping.\nfunction ctor() {\n  return function(){};\n}\n\n// An internal function for creating a new object that inherits from another.\nexport default function baseCreate(prototype) {\n  if (!isObject(prototype)) return {};\n  if (nativeCreate) return nativeCreate(prototype);\n  var Ctor = ctor();\n  Ctor.prototype = prototype;\n  var result = new Ctor;\n  Ctor.prototype = null;\n  return result;\n}\n","import baseCreate from './_baseCreate.js';\nimport extendOwn from './extendOwn.js';\n\n// Creates an object that inherits from the given prototype object.\n// If additional properties are provided then they will be added to the\n// created object.\nexport default function create(prototype, props) {\n  var result = baseCreate(prototype);\n  if (props) extendOwn(result, props);\n  return result;\n}\n","import isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport extend from './extend.js';\n\n// Create a (shallow-cloned) duplicate of an object.\nexport default function clone(obj) {\n  if (!isObject(obj)) return obj;\n  return isArray(obj) ? obj.slice() : extend({}, obj);\n}\n","// Invokes `interceptor` with the `obj` and then returns `obj`.\n// The primary purpose of this method is to \"tap into\" a method chain, in\n// order to perform operations on intermediate results within the chain.\nexport default function tap(obj, interceptor) {\n  interceptor(obj);\n  return obj;\n}\n","import _ from './underscore.js';\nimport isArray from './isArray.js';\n\n// Normalize a (deep) property `path` to array.\n// Like `_.iteratee`, this function can be customized.\nexport default function toPath(path) {\n  return isArray(path) ? path : [path];\n}\n_.toPath = toPath;\n","import _ from './underscore.js';\nimport './toPath.js';\n\n// Internal wrapper for `_.toPath` to enable minification.\n// Similar to `cb` for `_.iteratee`.\nexport default function toPath(path) {\n  return _.toPath(path);\n}\n","// Internal function to obtain a nested property in `obj` along `path`.\nexport default function deepGet(obj, path) {\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    if (obj == null) return void 0;\n    obj = obj[path[i]];\n  }\n  return length ? obj : void 0;\n}\n","import toPath from './_toPath.js';\nimport deepGet from './_deepGet.js';\nimport isUndefined from './isUndefined.js';\n\n// Get the value of the (deep) property on `path` from `object`.\n// If any property in `path` does not exist or if the value is\n// `undefined`, return `defaultValue` instead.\n// The `path` is normalized through `_.toPath`.\nexport default function get(object, path, defaultValue) {\n  var value = deepGet(object, toPath(path));\n  return isUndefined(value) ? defaultValue : value;\n}\n","import _has from './_has.js';\nimport toPath from './_toPath.js';\n\n// Shortcut function for checking if an object has a given property directly on\n// itself (in other words, not on a prototype). Unlike the internal `has`\n// function, this public version can also traverse nested properties.\nexport default function has(obj, path) {\n  path = toPath(path);\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    var key = path[i];\n    if (!_has(obj, key)) return false;\n    obj = obj[key];\n  }\n  return !!length;\n}\n","// Keep the identity function around for default iteratees.\nexport default function identity(value) {\n  return value;\n}\n","import extendOwn from './extendOwn.js';\nimport isMatch from './isMatch.js';\n\n// Returns a predicate for checking whether an object has a given set of\n// `key:value` pairs.\nexport default function matcher(attrs) {\n  attrs = extendOwn({}, attrs);\n  return function(obj) {\n    return isMatch(obj, attrs);\n  };\n}\n","import deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Creates a function that, when passed an object, will traverse that object’s\n// properties down the given `path`, specified as an array of keys or indices.\nexport default function property(path) {\n  path = toPath(path);\n  return function(obj) {\n    return deepGet(obj, path);\n  };\n}\n","// Internal function that returns an efficient (for current engines) version\n// of the passed-in callback, to be repeatedly applied in other Underscore\n// functions.\nexport default function optimizeCb(func, context, argCount) {\n  if (context === void 0) return func;\n  switch (argCount == null ? 3 : argCount) {\n    case 1: return function(value) {\n      return func.call(context, value);\n    };\n    // The 2-argument case is omitted because we’re not using it.\n    case 3: return function(value, index, collection) {\n      return func.call(context, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(context, accumulator, value, index, collection);\n    };\n  }\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n","import identity from './identity.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport matcher from './matcher.js';\nimport property from './property.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// An internal function to generate callbacks that can be applied to each\n// element in a collection, returning the desired result — either `_.identity`,\n// an arbitrary callback, a property matcher, or a property accessor.\nexport default function baseIteratee(value, context, argCount) {\n  if (value == null) return identity;\n  if (isFunction(value)) return optimizeCb(value, context, argCount);\n  if (isObject(value) && !isArray(value)) return matcher(value);\n  return property(value);\n}\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\n\n// External wrapper for our callback generator. Users may customize\n// `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n// This abstraction hides the internal-only `argCount` argument.\nexport default function iteratee(value, context) {\n  return baseIteratee(value, context, Infinity);\n}\n_.iteratee = iteratee;\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\nimport iteratee from './iteratee.js';\n\n// The function we call internally to generate a callback. It invokes\n// `_.iteratee` if overridden, otherwise `baseIteratee`.\nexport default function cb(value, context, argCount) {\n  if (_.iteratee !== iteratee) return _.iteratee(value, context);\n  return baseIteratee(value, context, argCount);\n}\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the results of applying the `iteratee` to each element of `obj`.\n// In contrast to `_.map` it returns an object.\nexport default function mapObject(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = keys(obj),\n      length = _keys.length,\n      results = {};\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys[index];\n    results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function noop(){}\n","import noop from './noop.js';\nimport get from './get.js';\n\n// Generates a function for a given object that returns a given property.\nexport default function propertyOf(obj) {\n  if (obj == null) return noop;\n  return function(path) {\n    return get(obj, path);\n  };\n}\n","import optimizeCb from './_optimizeCb.js';\n\n// Run a function **n** times.\nexport default function times(n, iteratee, context) {\n  var accum = Array(Math.max(0, n));\n  iteratee = optimizeCb(iteratee, context, 1);\n  for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n  return accum;\n}\n","// Return a random integer between `min` and `max` (inclusive).\nexport default function random(min, max) {\n  if (max == null) {\n    max = min;\n    min = 0;\n  }\n  return min + Math.floor(Math.random() * (max - min + 1));\n}\n","// A (possibly faster) way to get the current timestamp as an integer.\nexport default Date.now || function() {\n  return new Date().getTime();\n};\n","import keys from './keys.js';\n\n// Internal helper to generate functions for escaping and unescaping strings\n// to/from HTML interpolation.\nexport default function createEscaper(map) {\n  var escaper = function(match) {\n    return map[match];\n  };\n  // Regexes for identifying a key that needs to be escaped.\n  var source = '(?:' + keys(map).join('|') + ')';\n  var testRegexp = RegExp(source);\n  var replaceRegexp = RegExp(source, 'g');\n  return function(string) {\n    string = string == null ? '' : '' + string;\n    return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n  };\n}\n","// Internal list of HTML entities for escaping.\nexport default {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\n","import createEscaper from './_createEscaper.js';\nimport escapeMap from './_escapeMap.js';\n\n// Function for escaping strings to HTML interpolation.\nexport default createEscaper(escapeMap);\n","import createEscaper from './_createEscaper.js';\nimport unescapeMap from './_unescapeMap.js';\n\n// Function for unescaping strings from HTML interpolation.\nexport default createEscaper(unescapeMap);\n","import invert from './invert.js';\nimport escapeMap from './_escapeMap.js';\n\n// Internal list of HTML entities for unescaping.\nexport default invert(escapeMap);\n","import _ from './underscore.js';\n\n// By default, Underscore uses ERB-style template delimiters. Change the\n// following template settings to use alternative delimiters.\nexport default _.templateSettings = {\n  evaluate: /<%([\\s\\S]+?)%>/g,\n  interpolate: /<%=([\\s\\S]+?)%>/g,\n  escape: /<%-([\\s\\S]+?)%>/g\n};\n","import defaults from './defaults.js';\nimport _ from './underscore.js';\nimport './templateSettings.js';\n\n// When customizing `_.templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n  \"'\": \"'\",\n  '\\\\': '\\\\',\n  '\\r': 'r',\n  '\\n': 'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction escapeChar(match) {\n  return '\\\\' + escapes[match];\n}\n\n// In order to prevent third-party code injection through\n// `_.templateSettings.variable`, we test it against the following regular\n// expression. It is intentionally a bit more liberal than just matching valid\n// identifiers, but still prevents possible loopholes through defaults or\n// destructuring assignment.\nvar bareIdentifier = /^\\s*(\\w|\\$)+\\s*$/;\n\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n// NB: `oldSettings` only exists for backwards compatibility.\nexport default function template(text, settings, oldSettings) {\n  if (!settings && oldSettings) settings = oldSettings;\n  settings = defaults({}, settings, _.templateSettings);\n\n  // Combine delimiters into one regular expression via alternation.\n  var matcher = RegExp([\n    (settings.escape || noMatch).source,\n    (settings.interpolate || noMatch).source,\n    (settings.evaluate || noMatch).source\n  ].join('|') + '|$', 'g');\n\n  // Compile the template source, escaping string literals appropriately.\n  var index = 0;\n  var source = \"__p+='\";\n  text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n    source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n    index = offset + match.length;\n\n    if (escape) {\n      source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n    } else if (interpolate) {\n      source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n    } else if (evaluate) {\n      source += \"';\\n\" + evaluate + \"\\n__p+='\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offset.\n    return match;\n  });\n  source += \"';\\n\";\n\n  var argument = settings.variable;\n  if (argument) {\n    // Insure against third-party code injection. (CVE-2021-23358)\n    if (!bareIdentifier.test(argument)) throw new Error(\n      'variable is not a bare identifier: ' + argument\n    );\n  } else {\n    // If a variable is not specified, place data values in local scope.\n    source = 'with(obj||{}){\\n' + source + '}\\n';\n    argument = 'obj';\n  }\n\n  source = \"var __t,__p='',__j=Array.prototype.join,\" +\n    \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n    source + 'return __p;\\n';\n\n  var render;\n  try {\n    render = new Function(argument, '_', source);\n  } catch (e) {\n    e.source = source;\n    throw e;\n  }\n\n  var template = function(data) {\n    return render.call(this, data, _);\n  };\n\n  // Provide the compiled source as a convenience for precompilation.\n  template.source = 'function(' + argument + '){\\n' + source + '}';\n\n  return template;\n}\n","import isFunction from './isFunction.js';\nimport toPath from './_toPath.js';\n\n// Traverses the children of `obj` along `path`. If a child is a function, it\n// is invoked with its parent as context. Returns the value of the final\n// child, or `fallback` if any child is undefined.\nexport default function result(obj, path, fallback) {\n  path = toPath(path);\n  var length = path.length;\n  if (!length) {\n    return isFunction(fallback) ? fallback.call(obj) : fallback;\n  }\n  for (var i = 0; i < length; i++) {\n    var prop = obj == null ? void 0 : obj[path[i]];\n    if (prop === void 0) {\n      prop = fallback;\n      i = length; // Ensure we don't continue iterating.\n    }\n    obj = isFunction(prop) ? prop.call(obj) : prop;\n  }\n  return obj;\n}\n","// Generate a unique integer id (unique within the entire client session).\n// Useful for temporary DOM ids.\nvar idCounter = 0;\nexport default function uniqueId(prefix) {\n  var id = ++idCounter + '';\n  return prefix ? prefix + id : id;\n}\n","import _ from './underscore.js';\n\n// Start chaining a wrapped Underscore object.\nexport default function chain(obj) {\n  var instance = _(obj);\n  instance._chain = true;\n  return instance;\n}\n","import baseCreate from './_baseCreate.js';\nimport isObject from './isObject.js';\n\n// Internal function to execute `sourceFunc` bound to `context` with optional\n// `args`. Determines whether to execute a function as a constructor or as a\n// normal function.\nexport default function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n  if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n  var self = baseCreate(sourceFunc.prototype);\n  var result = sourceFunc.apply(self, args);\n  if (isObject(result)) return result;\n  return self;\n}\n","import restArguments from './restArguments.js';\nimport executeBound from './_executeBound.js';\nimport _ from './underscore.js';\n\n// Partially apply a function by creating a version that has had some of its\n// arguments pre-filled, without changing its dynamic `this` context. `_` acts\n// as a placeholder by default, allowing any combination of arguments to be\n// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\nvar partial = restArguments(function(func, boundArgs) {\n  var placeholder = partial.placeholder;\n  var bound = function() {\n    var position = 0, length = boundArgs.length;\n    var args = Array(length);\n    for (var i = 0; i < length; i++) {\n      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n    }\n    while (position < arguments.length) args.push(arguments[position++]);\n    return executeBound(func, bound, this, this, args);\n  };\n  return bound;\n});\n\npartial.placeholder = _;\nexport default partial;\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport executeBound from './_executeBound.js';\n\n// Create a function bound to a given object (assigning `this`, and arguments,\n// optionally).\nexport default restArguments(function(func, context, args) {\n  if (!isFunction(func)) throw new TypeError('Bind must be called on a function');\n  var bound = restArguments(function(callArgs) {\n    return executeBound(func, bound, context, this, args.concat(callArgs));\n  });\n  return bound;\n});\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getLength from './_getLength.js';\n\n// Internal helper for collection methods to determine whether a collection\n// should be iterated as an array or as an object.\n// Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n// Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\nexport default createSizePropertyCheck(getLength);\n","import getLength from './_getLength.js';\nimport isArrayLike from './_isArrayLike.js';\nimport isArray from './isArray.js';\nimport isArguments from './isArguments.js';\n\n// Internal implementation of a recursive `flatten` function.\nexport default function flatten(input, depth, strict, output) {\n  output = output || [];\n  if (!depth && depth !== 0) {\n    depth = Infinity;\n  } else if (depth <= 0) {\n    return output.concat(input);\n  }\n  var idx = output.length;\n  for (var i = 0, length = getLength(input); i < length; i++) {\n    var value = input[i];\n    if (isArrayLike(value) && (isArray(value) || isArguments(value))) {\n      // Flatten current level of array or arguments object.\n      if (depth > 1) {\n        flatten(value, depth - 1, strict, output);\n        idx = output.length;\n      } else {\n        var j = 0, len = value.length;\n        while (j < len) output[idx++] = value[j++];\n      }\n    } else if (!strict) {\n      output[idx++] = value;\n    }\n  }\n  return output;\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport bind from './bind.js';\n\n// Bind a number of an object's methods to that object. Remaining arguments\n// are the method names to be bound. Useful for ensuring that all callbacks\n// defined on an object belong to it.\nexport default restArguments(function(obj, keys) {\n  keys = flatten(keys, false, false);\n  var index = keys.length;\n  if (index < 1) throw new Error('bindAll must be passed function names');\n  while (index--) {\n    var key = keys[index];\n    obj[key] = bind(obj[key], obj);\n  }\n  return obj;\n});\n","import has from './_has.js';\n\n// Memoize an expensive function by storing its results.\nexport default function memoize(func, hasher) {\n  var memoize = function(key) {\n    var cache = memoize.cache;\n    var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n    if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n    return cache[address];\n  };\n  memoize.cache = {};\n  return memoize;\n}\n","import restArguments from './restArguments.js';\n\n// Delays a function for the given number of milliseconds, and then calls\n// it with the arguments supplied.\nexport default restArguments(function(func, wait, args) {\n  return setTimeout(function() {\n    return func.apply(null, args);\n  }, wait);\n});\n","import partial from './partial.js';\nimport delay from './delay.js';\nimport _ from './underscore.js';\n\n// Defers a function, scheduling it to run after the current call stack has\n// cleared.\nexport default partial(delay, _, 1);\n","import now from './now.js';\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\nexport default function throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function() {\n    var _now = now();\n    if (!previous && options.leading === false) previous = _now;\n    var remaining = wait - (_now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = _now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function() {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n","import restArguments from './restArguments.js';\nimport now from './now.js';\n\n// When a sequence of calls of the returned function ends, the argument\n// function is triggered. The end of a sequence is defined by the `wait`\n// parameter. If `immediate` is passed, the argument function will be\n// triggered at the beginning of the sequence instead of at the end.\nexport default function debounce(func, wait, immediate) {\n  var timeout, previous, args, result, context;\n\n  var later = function() {\n    var passed = now() - previous;\n    if (wait > passed) {\n      timeout = setTimeout(later, wait - passed);\n    } else {\n      timeout = null;\n      if (!immediate) result = func.apply(context, args);\n      // This check is needed because `func` can recursively invoke `debounced`.\n      if (!timeout) args = context = null;\n    }\n  };\n\n  var debounced = restArguments(function(_args) {\n    context = this;\n    args = _args;\n    previous = now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n      if (immediate) result = func.apply(context, args);\n    }\n    return result;\n  });\n\n  debounced.cancel = function() {\n    clearTimeout(timeout);\n    timeout = args = context = null;\n  };\n\n  return debounced;\n}\n","import partial from './partial.js';\n\n// Returns the first function passed as an argument to the second,\n// allowing you to adjust arguments, run code before and after, and\n// conditionally execute the original function.\nexport default function wrap(func, wrapper) {\n  return partial(wrapper, func);\n}\n","// Returns a negated version of the passed-in predicate.\nexport default function negate(predicate) {\n  return function() {\n    return !predicate.apply(this, arguments);\n  };\n}\n","// Returns a function that is the composition of a list of functions, each\n// consuming the return value of the function that follows.\nexport default function compose() {\n  var args = arguments;\n  var start = args.length - 1;\n  return function() {\n    var i = start;\n    var result = args[start].apply(this, arguments);\n    while (i--) result = args[i].call(this, result);\n    return result;\n  };\n}\n","// Returns a function that will only be executed on and after the Nth call.\nexport default function after(times, func) {\n  return function() {\n    if (--times < 1) {\n      return func.apply(this, arguments);\n    }\n  };\n}\n","// Returns a function that will only be executed up to (but not including) the\n// Nth call.\nexport default function before(times, func) {\n  var memo;\n  return function() {\n    if (--times > 0) {\n      memo = func.apply(this, arguments);\n    }\n    if (times <= 1) func = null;\n    return memo;\n  };\n}\n","import partial from './partial.js';\nimport before from './before.js';\n\n// Returns a function that will be executed at most one time, no matter how\n// often you call it. Useful for lazy initialization.\nexport default partial(before, 2);\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the first key on an object that passes a truth test.\nexport default function findKey(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = keys(obj), key;\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    key = _keys[i];\n    if (predicate(obj[key], key, obj)) return key;\n  }\n}\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Internal function to generate `_.findIndex` and `_.findLastIndex`.\nexport default function createPredicateIndexFinder(dir) {\n  return function(array, predicate, context) {\n    predicate = cb(predicate, context);\n    var length = getLength(array);\n    var index = dir > 0 ? 0 : length - 1;\n    for (; index >= 0 && index < length; index += dir) {\n      if (predicate(array[index], index, array)) return index;\n    }\n    return -1;\n  };\n}\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the first index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(1);\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the last index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(-1);\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Use a comparator function to figure out the smallest index at which\n// an object should be inserted so as to maintain order. Uses binary search.\nexport default function sortedIndex(array, obj, iteratee, context) {\n  iteratee = cb(iteratee, context, 1);\n  var value = iteratee(obj);\n  var low = 0, high = getLength(array);\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n    if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n  }\n  return low;\n}\n","import getLength from './_getLength.js';\nimport { slice } from './_setup.js';\nimport isNaN from './isNaN.js';\n\n// Internal function to generate the `_.indexOf` and `_.lastIndexOf` functions.\nexport default function createIndexFinder(dir, predicateFind, sortedIndex) {\n  return function(array, item, idx) {\n    var i = 0, length = getLength(array);\n    if (typeof idx == 'number') {\n      if (dir > 0) {\n        i = idx >= 0 ? idx : Math.max(idx + length, i);\n      } else {\n        length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n      }\n    } else if (sortedIndex && idx && length) {\n      idx = sortedIndex(array, item);\n      return array[idx] === item ? idx : -1;\n    }\n    if (item !== item) {\n      idx = predicateFind(slice.call(array, i, length), isNaN);\n      return idx >= 0 ? idx + i : -1;\n    }\n    for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n      if (array[idx] === item) return idx;\n    }\n    return -1;\n  };\n}\n","import sortedIndex from './sortedIndex.js';\nimport findIndex from './findIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the first occurrence of an item in an array,\n// or -1 if the item is not included in the array.\n// If the array is large and already in sort order, pass `true`\n// for **isSorted** to use binary search.\nexport default createIndexFinder(1, findIndex, sortedIndex);\n","import findLastIndex from './findLastIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the last occurrence of an item in an array,\n// or -1 if the item is not included in the array.\nexport default createIndexFinder(-1, findLastIndex);\n","import isArrayLike from './_isArrayLike.js';\nimport findIndex from './findIndex.js';\nimport findKey from './findKey.js';\n\n// Return the first value which passes a truth test.\nexport default function find(obj, predicate, context) {\n  var keyFinder = isArrayLike(obj) ? findIndex : findKey;\n  var key = keyFinder(obj, predicate, context);\n  if (key !== void 0 && key !== -1) return obj[key];\n}\n","import find from './find.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.find`: getting the first\n// object containing specific `key:value` pairs.\nexport default function findWhere(obj, attrs) {\n  return find(obj, matcher(attrs));\n}\n","import optimizeCb from './_optimizeCb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// The cornerstone for collection functions, an `each`\n// implementation, aka `forEach`.\n// Handles raw objects in addition to array-likes. Treats all\n// sparse array-likes as if they were dense.\nexport default function each(obj, iteratee, context) {\n  iteratee = optimizeCb(iteratee, context);\n  var i, length;\n  if (isArrayLike(obj)) {\n    for (i = 0, length = obj.length; i < length; i++) {\n      iteratee(obj[i], i, obj);\n    }\n  } else {\n    var _keys = keys(obj);\n    for (i = 0, length = _keys.length; i < length; i++) {\n      iteratee(obj[_keys[i]], _keys[i], obj);\n    }\n  }\n  return obj;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the results of applying the iteratee to each element.\nexport default function map(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length,\n      results = Array(length);\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    results[index] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// Internal helper to create a reducing function, iterating left or right.\nexport default function createReduce(dir) {\n  // Wrap code that reassigns argument variables in a separate function than\n  // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n  var reducer = function(obj, iteratee, memo, initial) {\n    var _keys = !isArrayLike(obj) && keys(obj),\n        length = (_keys || obj).length,\n        index = dir > 0 ? 0 : length - 1;\n    if (!initial) {\n      memo = obj[_keys ? _keys[index] : index];\n      index += dir;\n    }\n    for (; index >= 0 && index < length; index += dir) {\n      var currentKey = _keys ? _keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  return function(obj, iteratee, memo, context) {\n    var initial = arguments.length >= 3;\n    return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n  };\n}\n","import createReduce from './_createReduce.js';\n\n// **Reduce** builds up a single result from a list of values, aka `inject`,\n// or `foldl`.\nexport default createReduce(1);\n","import createReduce from './_createReduce.js';\n\n// The right-associative version of reduce, also known as `foldr`.\nexport default createReduce(-1);\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// Return all the elements that pass a truth test.\nexport default function filter(obj, predicate, context) {\n  var results = [];\n  predicate = cb(predicate, context);\n  each(obj, function(value, index, list) {\n    if (predicate(value, index, list)) results.push(value);\n  });\n  return results;\n}\n","import filter from './filter.js';\nimport negate from './negate.js';\nimport cb from './_cb.js';\n\n// Return all the elements for which a truth test fails.\nexport default function reject(obj, predicate, context) {\n  return filter(obj, negate(cb(predicate)), context);\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine whether all of the elements pass a truth test.\nexport default function every(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (!predicate(obj[currentKey], currentKey, obj)) return false;\n  }\n  return true;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine if at least one element in the object passes a truth test.\nexport default function some(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (predicate(obj[currentKey], currentKey, obj)) return true;\n  }\n  return false;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport indexOf from './indexOf.js';\n\n// Determine if the array or object contains a given item (using `===`).\nexport default function contains(obj, item, fromIndex, guard) {\n  if (!isArrayLike(obj)) obj = values(obj);\n  if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n  return indexOf(obj, item, fromIndex) >= 0;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport map from './map.js';\nimport deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Invoke a method (with arguments) on every item in a collection.\nexport default restArguments(function(obj, path, args) {\n  var contextPath, func;\n  if (isFunction(path)) {\n    func = path;\n  } else {\n    path = toPath(path);\n    contextPath = path.slice(0, -1);\n    path = path[path.length - 1];\n  }\n  return map(obj, function(context) {\n    var method = func;\n    if (!method) {\n      if (contextPath && contextPath.length) {\n        context = deepGet(context, contextPath);\n      }\n      if (context == null) return void 0;\n      method = context[path];\n    }\n    return method == null ? method : method.apply(context, args);\n  });\n});\n","import map from './map.js';\nimport property from './property.js';\n\n// Convenience version of a common use case of `_.map`: fetching a property.\nexport default function pluck(obj, key) {\n  return map(obj, property(key));\n}\n","import filter from './filter.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.filter`: selecting only\n// objects containing specific `key:value` pairs.\nexport default function where(obj, attrs) {\n  return filter(obj, matcher(attrs));\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the maximum element (or element-based computation).\nexport default function max(obj, iteratee, context) {\n  var result = -Infinity, lastComputed = -Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value > result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed > lastComputed || (computed === -Infinity && result === -Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the minimum element (or element-based computation).\nexport default function min(obj, iteratee, context) {\n  var result = Infinity, lastComputed = Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value < result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed < lastComputed || (computed === Infinity && result === Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArray from './isArray.js';\nimport { slice } from './_setup.js';\nimport isString from './isString.js';\nimport isArrayLike from './_isArrayLike.js';\nimport map from './map.js';\nimport identity from './identity.js';\nimport values from './values.js';\n\n// Safely create a real, live array from anything iterable.\nvar reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\nexport default function toArray(obj) {\n  if (!obj) return [];\n  if (isArray(obj)) return slice.call(obj);\n  if (isString(obj)) {\n    // Keep surrogate pair characters together.\n    return obj.match(reStrSymbol);\n  }\n  if (isArrayLike(obj)) return map(obj, identity);\n  return values(obj);\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport getLength from './_getLength.js';\nimport random from './random.js';\nimport toArray from './toArray.js';\n\n// Sample **n** random values from a collection using the modern version of the\n// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n// If **n** is not specified, returns a single random element.\n// The internal `guard` argument allows it to work with `_.map`.\nexport default function sample(obj, n, guard) {\n  if (n == null || guard) {\n    if (!isArrayLike(obj)) obj = values(obj);\n    return obj[random(obj.length - 1)];\n  }\n  var sample = toArray(obj);\n  var length = getLength(sample);\n  n = Math.max(Math.min(n, length), 0);\n  var last = length - 1;\n  for (var index = 0; index < n; index++) {\n    var rand = random(index, last);\n    var temp = sample[index];\n    sample[index] = sample[rand];\n    sample[rand] = temp;\n  }\n  return sample.slice(0, n);\n}\n","import sample from './sample.js';\n\n// Shuffle a collection.\nexport default function shuffle(obj) {\n  return sample(obj, Infinity);\n}\n","import cb from './_cb.js';\nimport pluck from './pluck.js';\nimport map from './map.js';\n\n// Sort the object's values by a criterion produced by an iteratee.\nexport default function sortBy(obj, iteratee, context) {\n  var index = 0;\n  iteratee = cb(iteratee, context);\n  return pluck(map(obj, function(value, key, list) {\n    return {\n      value: value,\n      index: index++,\n      criteria: iteratee(value, key, list)\n    };\n  }).sort(function(left, right) {\n    var a = left.criteria;\n    var b = right.criteria;\n    if (a !== b) {\n      if (a > b || a === void 0) return 1;\n      if (a < b || b === void 0) return -1;\n    }\n    return left.index - right.index;\n  }), 'value');\n}\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// An internal function used for aggregate \"group by\" operations.\nexport default function group(behavior, partition) {\n  return function(obj, iteratee, context) {\n    var result = partition ? [[], []] : {};\n    iteratee = cb(iteratee, context);\n    each(obj, function(value, index) {\n      var key = iteratee(value, index, obj);\n      behavior(result, value, key);\n    });\n    return result;\n  };\n}\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Groups the object's values by a criterion. Pass either a string attribute\n// to group by, or a function that returns the criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key].push(value); else result[key] = [value];\n});\n","import group from './_group.js';\n\n// Indexes the object's values by a criterion, similar to `_.groupBy`, but for\n// when you know that your index values will be unique.\nexport default group(function(result, value, key) {\n  result[key] = value;\n});\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Counts instances of an object that group by a certain criterion. Pass\n// either a string attribute to count by, or a function that returns the\n// criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key]++; else result[key] = 1;\n});\n","import group from './_group.js';\n\n// Split a collection into two arrays: one whose elements all pass the given\n// truth test, and one whose elements all do not pass the truth test.\nexport default group(function(result, value, pass) {\n  result[pass ? 0 : 1].push(value);\n}, true);\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the number of elements in a collection.\nexport default function size(obj) {\n  if (obj == null) return 0;\n  return isArrayLike(obj) ? obj.length : keys(obj).length;\n}\n","// Internal `_.pick` helper function to determine whether `key` is an enumerable\n// property name of `obj`.\nexport default function keyInObj(value, key, obj) {\n  return key in obj;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport optimizeCb from './_optimizeCb.js';\nimport allKeys from './allKeys.js';\nimport keyInObj from './_keyInObj.js';\nimport flatten from './_flatten.js';\n\n// Return a copy of the object only containing the allowed properties.\nexport default restArguments(function(obj, keys) {\n  var result = {}, iteratee = keys[0];\n  if (obj == null) return result;\n  if (isFunction(iteratee)) {\n    if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n    keys = allKeys(obj);\n  } else {\n    iteratee = keyInObj;\n    keys = flatten(keys, false, false);\n    obj = Object(obj);\n  }\n  for (var i = 0, length = keys.length; i < length; i++) {\n    var key = keys[i];\n    var value = obj[key];\n    if (iteratee(value, key, obj)) result[key] = value;\n  }\n  return result;\n});\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport negate from './negate.js';\nimport map from './map.js';\nimport flatten from './_flatten.js';\nimport contains from './contains.js';\nimport pick from './pick.js';\n\n// Return a copy of the object without the disallowed properties.\nexport default restArguments(function(obj, keys) {\n  var iteratee = keys[0], context;\n  if (isFunction(iteratee)) {\n    iteratee = negate(iteratee);\n    if (keys.length > 1) context = keys[1];\n  } else {\n    keys = map(flatten(keys, false, false), String);\n    iteratee = function(value, key) {\n      return !contains(keys, key);\n    };\n  }\n  return pick(obj, iteratee, context);\n});\n","import { slice } from './_setup.js';\n\n// Returns everything but the last entry of the array. Especially useful on\n// the arguments object. Passing **n** will return all the values in\n// the array, excluding the last N.\nexport default function initial(array, n, guard) {\n  return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n}\n","import initial from './initial.js';\n\n// Get the first element of an array. Passing **n** will return the first N\n// values in the array. The **guard** check allows it to work with `_.map`.\nexport default function first(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[0];\n  return initial(array, array.length - n);\n}\n","import { slice } from './_setup.js';\n\n// Returns everything but the first entry of the `array`. Especially useful on\n// the `arguments` object. Passing an **n** will return the rest N values in the\n// `array`.\nexport default function rest(array, n, guard) {\n  return slice.call(array, n == null || guard ? 1 : n);\n}\n","import rest from './rest.js';\n\n// Get the last element of an array. Passing **n** will return the last N\n// values in the array.\nexport default function last(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[array.length - 1];\n  return rest(array, Math.max(0, array.length - n));\n}\n","import filter from './filter.js';\n\n// Trim out all falsy values from an array.\nexport default function compact(array) {\n  return filter(array, Boolean);\n}\n","import _flatten from './_flatten.js';\n\n// Flatten out an array, either recursively (by default), or up to `depth`.\n// Passing `true` or `false` as `depth` means `1` or `Infinity`, respectively.\nexport default function flatten(array, depth) {\n  return _flatten(array, depth, false);\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport filter from './filter.js';\nimport contains from './contains.js';\n\n// Take the difference between one array and a number of other arrays.\n// Only the elements present in just the first array will remain.\nexport default restArguments(function(array, rest) {\n  rest = flatten(rest, true, true);\n  return filter(array, function(value){\n    return !contains(rest, value);\n  });\n});\n","import restArguments from './restArguments.js';\nimport difference from './difference.js';\n\n// Return a version of the array that does not contain the specified value(s).\nexport default restArguments(function(array, otherArrays) {\n  return difference(array, otherArrays);\n});\n","import isBoolean from './isBoolean.js';\nimport cb from './_cb.js';\nimport getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce a duplicate-free version of the array. If the array has already\n// been sorted, you have the option of using a faster algorithm.\n// The faster algorithm will not work with an iteratee if the iteratee\n// is not a one-to-one function, so providing an iteratee will disable\n// the faster algorithm.\nexport default function uniq(array, isSorted, iteratee, context) {\n  if (!isBoolean(isSorted)) {\n    context = iteratee;\n    iteratee = isSorted;\n    isSorted = false;\n  }\n  if (iteratee != null) iteratee = cb(iteratee, context);\n  var result = [];\n  var seen = [];\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var value = array[i],\n        computed = iteratee ? iteratee(value, i, array) : value;\n    if (isSorted && !iteratee) {\n      if (!i || seen !== computed) result.push(value);\n      seen = computed;\n    } else if (iteratee) {\n      if (!contains(seen, computed)) {\n        seen.push(computed);\n        result.push(value);\n      }\n    } else if (!contains(result, value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport uniq from './uniq.js';\nimport flatten from './_flatten.js';\n\n// Produce an array that contains the union: each distinct element from all of\n// the passed-in arrays.\nexport default restArguments(function(arrays) {\n  return uniq(flatten(arrays, true, true));\n});\n","import getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce an array that contains every item shared between all the\n// passed-in arrays.\nexport default function intersection(array) {\n  var result = [];\n  var argsLength = arguments.length;\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var item = array[i];\n    if (contains(result, item)) continue;\n    var j;\n    for (j = 1; j < argsLength; j++) {\n      if (!contains(arguments[j], item)) break;\n    }\n    if (j === argsLength) result.push(item);\n  }\n  return result;\n}\n","import max from './max.js';\nimport getLength from './_getLength.js';\nimport pluck from './pluck.js';\n\n// Complement of zip. Unzip accepts an array of arrays and groups\n// each array's elements on shared indices.\nexport default function unzip(array) {\n  var length = (array && max(array, getLength).length) || 0;\n  var result = Array(length);\n\n  for (var index = 0; index < length; index++) {\n    result[index] = pluck(array, index);\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport unzip from './unzip.js';\n\n// Zip together multiple lists into a single array -- elements that share\n// an index go together.\nexport default restArguments(unzip);\n","import getLength  from './_getLength.js';\n\n// Converts lists into objects. Pass either a single array of `[key, value]`\n// pairs, or two parallel arrays of the same length -- one of keys, and one of\n// the corresponding values. Passing by pairs is the reverse of `_.pairs`.\nexport default function object(list, values) {\n  var result = {};\n  for (var i = 0, length = getLength(list); i < length; i++) {\n    if (values) {\n      result[list[i]] = values[i];\n    } else {\n      result[list[i][0]] = list[i][1];\n    }\n  }\n  return result;\n}\n","// Generate an integer Array containing an arithmetic progression. A port of\n// the native Python `range()` function. See\n// [the Python documentation](https://docs.python.org/library/functions.html#range).\nexport default function range(start, stop, step) {\n  if (stop == null) {\n    stop = start || 0;\n    start = 0;\n  }\n  if (!step) {\n    step = stop < start ? -1 : 1;\n  }\n\n  var length = Math.max(Math.ceil((stop - start) / step), 0);\n  var range = Array(length);\n\n  for (var idx = 0; idx < length; idx++, start += step) {\n    range[idx] = start;\n  }\n\n  return range;\n}\n","import { slice } from './_setup.js';\n\n// Chunk a single array into multiple arrays, each containing `count` or fewer\n// items.\nexport default function chunk(array, count) {\n  if (count == null || count < 1) return [];\n  var result = [];\n  var i = 0, length = array.length;\n  while (i < length) {\n    result.push(slice.call(array, i, i += count));\n  }\n  return result;\n}\n","import _ from './underscore.js';\n\n// Helper function to continue chaining intermediate results.\nexport default function chainResult(instance, obj) {\n  return instance._chain ? _(obj).chain() : obj;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport functions from './functions.js';\nimport { push } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add your own custom functions to the Underscore object.\nexport default function mixin(obj) {\n  each(functions(obj), function(name) {\n    var func = _[name] = obj[name];\n    _.prototype[name] = function() {\n      var args = [this._wrapped];\n      push.apply(args, arguments);\n      return chainResult(this, func.apply(_, args));\n    };\n  });\n  return _;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport { ArrayProto } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add all mutator `Array` functions to the wrapper.\neach(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) {\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) {\n        delete obj[0];\n      }\n    }\n    return chainResult(this, obj);\n  };\n});\n\n// Add all accessor `Array` functions to the wrapper.\neach(['concat', 'join', 'slice'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) obj = method.apply(obj, arguments);\n    return chainResult(this, obj);\n  };\n});\n\nexport default _;\n","// Default Export\n// ==============\n// In this module, we mix our bundled exports into the `_` object and export\n// the result. This is analogous to setting `module.exports = _` in CommonJS.\n// Hence, this module is also the entry point of our UMD bundle and the package\n// entry point for CommonJS and AMD users. In other words, this is (the source\n// of) the module you are interfacing with when you do any of the following:\n//\n// ```js\n// // CommonJS\n// var _ = require('underscore');\n//\n// // AMD\n// define(['underscore'], function(_) {...});\n//\n// // UMD in the browser\n// // _ is available as a global variable\n// ```\nimport * as allExports from './index.js';\nimport { mixin } from './index.js';\n\n// Add all of the Underscore functions to the wrapper object.\nvar _ = mixin(allExports);\n// Legacy Node.js API.\n_._ = _;\n// Export the Underscore API.\nexport default _;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}